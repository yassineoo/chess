{"version":3,"sources":["Component/Header.js","Component/LoginPopup.js","Component/Plateau/Piece.js","Component/Plateau/Plateau.js","Component/GameParamSelec.js","Component/MainMenu.js","Class/IA.js","Component/GameInterface.js","Component/AppCTN.js","App.js","index.js"],"names":["Header","props","id","onClick","this","handleDisplayLogin","Component","LoginPopup","name","email","mdp","reMdp","state","inscriptionMode","inscriptionConfirmed","nameError","emailError","mdpError","reMdpError","errorString","obj","console","log","gibtError","errors","errorType","length","setState","dataObject","password","xhttp","XMLHttpRequest","self","onreadystatechange","readyState","status","rawJSON","responseText","objRes","JSON","parse","executeSignIn","handleServerError","errorMessage","open","setRequestHeader","dataURL","URLSearchParams","toString","send","executeLogin","width","height","src","handleHideLogin","style","backgroundColor","className","type","onChange","e","target","value","signAjax","bind","href","showInscriptionScreen","showConnexionScreen","showInscriptionComfirmed","Piece","pieceID","url","Math","abs","position","newPosition","cursor","color","from","top","left","opacity","to","translation","fadeIn","onRest","HandleEndMoveAnim","styles","div","zIndex","loadPieceUrl","PIECE","COLOR","Plateau","playerColor","newMovePosition","newMovePositionStyle","selectedPiece","possibleMoves","moving","renderingLastMove","turn","clickable","moveType","altMovePosition","y","x","handleComfirmMove","table","findPossibleMoves","tableCaseElements","black","i","floor","isPieceSelected","isMovePossible","push","tablePieceElements","precMove","move","previousPieceInfo","newMove","newPieceInfo","precPiece","consumedPiece","k","j","isSelected","beenMovedLastTurn","isEaten","positionStyle","newPositionStyle","tableClickElements","isPlayersTile","handleClick","generateGrille","generatePieces","generateClickLayer","tour","toggleDirection","Array","fill","map","pasclassique","newTable","React","GameParamSelec","validate","handleHideParam","alt","class","disabled","go","plateauStatus","MainMenu","selectedGameMode","showParamSelec","gameParam","launchCreateRoom","launchJoinRoom","launchIA","initCreateRoom","initJoinRoom","initIA","launchGameRouter","PlayerIA","pickedMove","coord","pieceSelected","absuh","flat","v","piece","filter","getRandomInt","movesList","indexOf","moveCoord","index","kayen","min","max","ceil","random","AppCTN","displayLoginPopUp","margin","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.74dada5e.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nimport '../Style/font/font.css'\nimport '../Style/Header.css'\n\nexport class Header extends Component {\n\n    constructor(props){\n        super(props);\n\n\n    }\n\n    render() {\n        return (\n            <div id=\"headerCTN\">\n                \n                <button \n                    id='connextion-HEADER'\n                    onClick={this.props.handleDisplayLogin}\n                >\n                    الإتصال\n                </button>\n\n                <h2 id='title-HEADER'>\n                    سَطرانجا  \n                </h2>\n\n\n                \n            </div>\n        )\n    }\n}\n\n\nexport default Header;\n","import React, { Component } from 'react'\n\nimport '../Style/font/font.css'\nimport '../Style/LoginPopup.css'\n\nexport default class LoginPopup extends Component {\n\n    constructor(props){\n        super(props);\n\n        this.name = \"\";\n        this.email = \"\";\n        this.mdp = \"\";\n        this.reMdp = \"\";\n\n\n        this.state = {\n            inscriptionMode: false,\n            inscriptionConfirmed: false,\n\n            nameError: false,\n            emailError: false,\n            mdpError: false,\n            reMdpError: false,\n        }\n    }\n\n    handleServerError(errorString, where='sign'){\n\n    }\n\n    executeSignIn(obj){\n        console.log(\"signed\", obj);\n    }\n\n    executeLogin(obj){\n        console.log(\"logged\", obj);\n    }\n\n    signAjax(){\n        let gibtError = false;\n\n        let errors = {\n            nameError: false,\n            emailError: false,\n            mdpError: false,\n            reMdpError: false,   \n        }\n\n        errors.emailError = ( this.email.length === 0 || false);\n        errors.mdpError = ( this.mdp.length < 8 );\n        errors.reMdpError = ( this.reMdpError !== this.mdp );\n        errors.nameError = ( this.name.length === 0 );\n\n        \n\n        //Detecte local errors\n        for (const errorType in errors) \n            gibtError  |= errors[errorType]\n        \n        if (gibtError) \n\n            this.setState(errors);\n        //If there are no local errors, we send a request\n        else \n        {\n            let dataObject = {\n                name: this.name,\n                email: this.email,\n                password: this.password\n            };\n\n            let xhttp = new XMLHttpRequest();\n            let self = this;\n\n            xhttp.onreadystatechange = ()=>{\n\n                if (this.readyState === 4 && this.status === 200) \n                {\n                    let rawJSON = xhttp.responseText;\n                    let objRes = JSON.parse(rawJSON);\n\n                    if(objRes.status)\n\n                        self.executeSignIn(objRes);\n\n                    else \n\n                        self.handleServerError(objRes.errorMessage, 'sign');\n                }\n            }\n\n            xhttp.open(\"Post\", \"sign\", true);\n            xhttp.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n            let dataURL = new URLSearchParams(dataObject).toString();\n            xhttp.send(dataURL);\n        }\n        \n    }\n\n    loginAjax(){\n        let gibtError = false;\n\n        let errors = {\n            nameError: false,\n            mdpError: false,\n        }\n\n        errors.nameError = ( this.name.length === 0 );\n        errors.mdpError = ( this.mdp.length === 0 );\n        \n\n        //Detecte local errors\n        for (const errorType in errors) \n            gibtError  |= errors[errorType]\n        \n        if (gibtError) \n\n            this.setState(errors);\n\n        //If there are no local errors, we send a request\n        else \n        {\n            let dataObject = {\n                name: this.name,\n                password: this.password\n            };\n\n            let xhttp = new XMLHttpRequest();\n            let self = this;\n\n            xhttp.onreadystatechange = ()=>{\n\n                if (this.readyState === 4 && this.status === 200) \n                {\n                    let rawJSON = xhttp.responseText;\n                    let objRes = JSON.parse(rawJSON);\n\n                    if(objRes.status)\n\n                        self.executeLogin(objRes);\n\n                    else \n\n                        self.handleServerError(objRes.errorMessage, 'login');\n                }\n            }\n\n            xhttp.open(\"Post\", \"login\", true);\n            xhttp.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n            let dataURL = new URLSearchParams(dataObject).toString();\n            xhttp.send(dataURL);\n        }\n        \n    }\n\n\n    \n\n    showInscriptionScreen(){\n\n        return (\n            <div id=\"LoginPopup-CTN\">\n\n\n                <div id=\"loginHeaderCTN\">\n                    <img width=\"40px\" height=\"40px\" src=\"x.svg\" id=\"XbtnLogin\"\n                        onClick={this.props.handleHideLogin}\n                    />\n                    <h1>\n                        تسجيل   \n                    </h1>\n                </div>\n\n                <hr width=\"90%\" style={{backgroundColor: 'black'}}/>\n\n                <div className=\"popupElements\">\n                    <input type=\"text\" onChange={(e)=>this.email = e.target.value}/>\n                    <label>:عنوان البريد الإلكتروني</label> \n                </div>\n\n                <div className=\"popupElements\">\n                    <input type=\"text\"  onChange={(e)=>this.name = e.target.value}/>\n                    <label>:إسمك</label> \n                </div>\n                <div className=\"popupElements\">\n                    <input type=\"password\"  onChange={(e)=>this.mdp = e.target.value}/> \n                    <label>:كلمة السرية</label> \n                </div>\n                <div className=\"popupElements\">\n                    <input type=\"password\"  onChange={(e)=>this.reMdp = e.target.value}/> \n                    <label>:تأكيد الكلمة السرية </label> \n                </div>\n\n                <div id=\"btnPopUp-CTN\">\n\n                    <hr width=\"90%\" style={{backgroundColor: 'black'}}/>\n                    \n                    <button \n                        className=\"LoginButton\"\n                        onClick={this.signAjax.bind(this)}\n                    >\n                        إتمام التسجيل   \n                    </button>\n                </div>\n            </div>\n        );\n\n    }\n\n    showConnexionScreen(){\n        return(\n\n        <div id=\"LoginPopup-CTN\">\n\n            <div id=\"loginHeaderCTN\">\n                <img width=\"40px\" height=\"40px\" src=\"x.svg\" id=\"XbtnLogin\"\n\n                    onClick={this.props.handleHideLogin}\n                />\n                <h1>\n                    الإتصال \n                </h1>\n            </div>\n            <hr width=\"90%\" style={{backgroundColor: 'black'}}/>\n\n            <div className=\"popupElements\">\n                \n                <input type=\"text\" onChange={(e)=>this.name = e.target.value}/>\n                <label>:إسمك</label> \n            </div>\n            <div className=\"popupElements\">\n                <input type=\"password\"  onChange={(e)=>this.mdp = e.target.value}/> \n                <label>:كلمة السرية</label> \n            </div>\n\n            <div className=\"popupElements\">\n                <a href=\"#\">هل نسيت كلمة السرية الخاصة بك؟</a>\n            </div>\n\n            <div id=\"btnPopUp-CTN\">\n                <button className=\"LoginButton\">\n                    دخول    \n                </button>\n\n                <hr width=\"90%\" style={{backgroundColor: 'black'}}/>\n                \n                <button className=\"LoginButton\" onClick={()=>this.setState({inscriptionMode: true})}>\n                    تسجيل   \n                </button>\n            </div>\n\n        </div>\n\n        );\n    }\n\n    showInscriptionComfirmed(){\n        return(\n\n            <div id=\"LoginPopup-CTN\">\n    \n                <div id=\"loginHeaderCTN\">\n                    <img width=\"40px\" height=\"40px\" src=\"x.svg\" id=\"XbtnLogin\"\n    \n                        onClick={this.props.handleHideLogin}\n                    />\n                    <h1>\n                        ! مليح \n                    </h1>\n                </div>\n                <hr width=\"90%\" style={{backgroundColor: 'black'}}/>\n    \n                <div className=\"popupElements\" id=\"titlePopupLog\">\n                    تحقق من بريدك  \n                </div> \n                <div className=\"popupElements\">\n                    لقد تم بعث بريدا إلكترونيا في صندوق البريد الإلكتروني الخاص بك، للتحقق من حسابك \n                </div>\n\n                <div id=\"btnPopUp-CTN\">\n                    <button className=\"LoginButton\" \n                    onClick={()=>this.setState({\n                        inscriptionMode: false,\n                        inscriptionConfirmed: false,\n                    })}>\n                        رجوع     \n                    </button>\n                </div>\n    \n            </div>\n    \n            );\n    }\n\n    render() {\n        return (\n            <div id=\"LoginPopupOVERLAY-CTN\">\n               {this.state.inscriptionMode && !this.state.inscriptionConfirmed &&\n                    this.showInscriptionScreen()\n               }\n               {!this.state.inscriptionMode && !this.state.inscriptionConfirmed &&\n                    this.showConnexionScreen()\n               }\n               { this.state.inscriptionConfirmed &&\n                    this.showInscriptionComfirmed()\n               }\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Spring, animated } from 'react-spring';\n\nimport '../../Style/Plateau.css'\n\n\nexport default class Piece extends Component {\n\n\n\n    loadPieceUrl(pieceID){\n\n        let url = '';\n        let parentPath = '/Pieces/svgCommon/';\n\n        let absValue = Math.abs(pieceID);\n\n        switch (absValue) {\n            case 1:\n                url += 'pion';\n                break;\n\n            case 2:\n                url += 'cavalier';\n                break;\n\n            case 3:\n                url += 'tour';\n                break;\n\n            case 4:\n                url += 'fou';\n                break;\n\n            case 5:\n                url += 'roi';\n                break;\n\n            case 6:\n                url += 'reine';\n                break;\n\n            default:\n                break;\n        }\n\n        if(pieceID < 0)\n            url += 'NOIR';\n\n        else \n            url += 'BLANC';\n\n        url += '.svg';\n\n\n        return parentPath + url;\n    }\n\n\n    render() {\n        let position  = this.props.position,\n            newPosition = this.props.newPosition;\n\n        let cursor = (this.props.color * this.props.pieceID > 0 ? 'pointer' : 'initial');\n\n        return (\n            <Spring\n\n                from={{\n                    top: position.top,\n                    left: position.left,\n                    opacity: '1'\n                }}\n\n                to={{\n                    top: this.props.translation ? newPosition.top : position.top,\n                    left:  this.props.translation ? newPosition.left : position.left,\n\n                    opacity: this.props.fadeIn ? '0' : '1',\n                }}\n\n                onRest={ ()=>\n                        this.props.HandleEndMoveAnim(this.props.translation)\n                    }\n            >\n                { styles => (\n                    <animated.div\n                        className={'pieceElement'}\n                        style={{...styles, cursor, zIndex: this.props.translation ? 10 : 1}}\n                    >\n                        <img src={this.loadPieceUrl(this.props.pieceID)}>\n    \n                        </img>\n                    </animated.div>\n                )}\n            </Spring>\n        );\n    }\n}\n","import React from 'react';\nimport {Spring, animated} from 'react-spring';\n\nimport '../../Style/Plateau.css'\nimport Piece from './Piece';\n\nconst PIECE = {\n    NULL: 0,\n    PION: 1,\n    CAVALIER: 2,\n    TOUR: 3,\n    FOU: 4,\n    ROI: 5,\n    REINE: 6\n}\n\nconst COLOR = {\n    BLANC: 1,\n    NOIR: -1\n}\n\nclass Plateau extends React.Component{\n\n    constructor(props){\n\n        console.log('neu');\n        super(props);\n\n        this.playerColor = props.color;\n        this.newMovePosition = null;\n        this.newMovePositionStyle = null;\n\n\n        this.state = {\n            selectedPiece: null,\n            possibleMoves: null,\n            moving: false,\n            renderingLastMove: true,\n\n            turn: -1,\n            clickable: props.clickable,\n        }\n\n        \n    }\n\n    componentDidUpdate(){\n\n    }\n\n    static getDerivedStateFromProps(props, state){\n        if (state.turn !== props.turn)\n\n        console.log(\"new Turn\");\n        if (state.turn !== props.turn)\n        \n            return {\n                renderingLastMove: true,\n                selectedPiece: null,\n                possibleMoves: null,\n                moving: false,\n                renderingLastMove: true,\n\n                clickable: props.clickable,\n\n                turn: props.turn,\n            }\n        else \n            return {};\n    }\n\n    HandleEndMoveAnim(moveType){\n        //moveType(boolean): either the end of the fadeIn or translation animation\n\n        if(!moveType)\n            return;\n\n        \n        if( this.state.renderingLastMove ){\n\n            this.setState({renderingLastMove : false});\n\n        }\n\n        else if ( this.state.moving ) \n        {\n            let altMovePosition = {\n                y: this.state.selectedPiece.y,\n                x: this.state.selectedPiece.x\n            };\n            \n            this.props.handleComfirmMove(altMovePosition, this.newMovePosition)\n        }\n\n    }\n\n    handleClick(x, y, clickable){\n\n        if(!clickable)\n            return;\n\n        if(this.state.moving)\n            return;\n\n\n        let table = this.props.status;\n\n\n        //If we've clicked on a second on the selected piece\n        if(this.state.selectedPiece && this.state.selectedPiece.x === x && this.state.selectedPiece.y === y)\n        {\n            this.setState({\n                selectedPiece: null,\n                possibleMoves: null\n            });\n        }\n\n        //If we've clicked on a piece which is the same color as ours\n        else if(table[y][x] !== 0 && table[y][x] * this.playerColor > 0)\n        {\n            \n            this.setState({\n                selectedPiece: {x , y},\n                possibleMoves: Plateau.findPossibleMoves(x, y, this.playerColor, this.props.status),\n            });\n\n        }\n        \n        //If we've selected a piece and clicked on a legit position to make a move\n        else if ( this.state.selectedPiece && this.state.possibleMoves[y][x] === 1 )\n        {\n            let altMovePosition = {\n                y: this.state.selectedPiece.y,\n                x: this.state.selectedPiece.x\n            };\n\n            this.newMovePosition = { x, y };\n            this.newMovePositionStyle = {\n                top: (y * 75) + 'px',\n                left: (x * 75) + 'px',\n            }\n            this.setState({\n                moving: true,\n                possibleMoves: null,\n                clickable: false,\n            })\n        }\n        else\n        {   \n            this.setState({\n                selectedPiece: null,\n                possibleMoves: null\n            });\n        \n        }\n        \n    }\n\n\n    //Generate the bottom grid layer \n    generateGrille(selectedPiece, possibleMoves){\n\n        let tableCaseElements = [];\n        let black = true;\n\n        for (let i = 0; i < 64 ; i++) \n        {\n            //Is the tile black ?\n            if (i % 8 != 0)\n                black = !black;\n\n            //We get our current coordinates\n            let x = i % 8,\n                y = Math.floor(i / 8);\n\n            //If the current tile corresponds to a selectedPiece, or if it corresponds to a \"movable\" location\n            let isPieceSelected = selectedPiece !== null && (selectedPiece.x === x && selectedPiece.y === y),\n                isMovePossible = possibleMoves !== null && possibleMoves[y][x];\n\n            let color = black ? '#769656' : '#eeeed2';\n\n            tableCaseElements.push(\n                //The first spring corresponds to the selected piece\n                <Spring\n                    key={i+'caseGrille'}\n                    backgroundColor={ isPieceSelected ? '#e2e25f' : color}\n                >\n                { styles => (\n                    <animated.div \n                        \n                        className={black ? 'blackTile': 'whiteTile'}\n                        style={{...styles}}\n                    >  \n                    \n                    <Spring  //The second spring corresponds to the \"movable\" location\n                        opacity={ isMovePossible ? '1' : '0'}\n                    >\n                    { styles => (\n                        <animated.div                             \n                            style={{...styles}}\n                            className=\"possibleMoveIcon\" \n                        >\n                        </animated.div>\n                    )}\n                    </Spring>\n                    \n                        \n                    </animated.div>\n                )}\n                </Spring>\n                \n            );\n\n            \n        }\n\n        return tableCaseElements;\n    }\n\n    generatePieces(selectedPiece, moving, renderingLastMove){\n\n        let tablePieceElements = [];\n\n        let precMove = this.props.move.previousPieceInfo,\n            newMove = this.props.move.newPieceInfo,\n            precPiece = this.props.move.consumedPiece;\n\n\n        for (let k = 0; k < 64 ; k++) \n        {\n            let i = k % 8,\n                j = Math.floor(k / 8);\n\n            //If the tile isnt empty, nor has it been moved the previous turn\n            if(this.props.status[i][j] !== 0)\n            {   \n                \n                let isSelected = selectedPiece && (i === selectedPiece.y) && (j === selectedPiece.x),\n                    beenMovedLastTurn = ( i === newMove.y && j === newMove.x),\n                    isEaten = this.newMovePosition && (i === this.newMovePosition.y) && (j === this.newMovePosition.x);\n\n\n                let positionStyle, newPositionStyle;\n                if (beenMovedLastTurn && renderingLastMove)\n                {\n                    positionStyle = {\n                        top: ( precMove.y * 75 ) + 'px',\n                        left: ( precMove.x * 75 ) + 'px',                \n                    };\n                    newPositionStyle = {\n                        top: ( newMove.y * 75 ) + 'px',\n                        left: ( newMove.x * 75 ) + 'px',                            \n                    }\n                }\n                else\n                {\n                    positionStyle = {\n                        top: ( i * 75 ) + 'px',\n                        left: ( j * 75 ) + 'px',            \n                    };\n                    newPositionStyle = this.newMovePositionStyle;                 \n                }\n                \n\n                tablePieceElements.push(\n\n                    <Piece \n                        pieceID={this.props.status[i][j]}\n                        \n                        translation={(moving && isSelected) || (renderingLastMove && beenMovedLastTurn)}\n                        fadeIn={moving && isEaten}\n\n                        position={positionStyle}\n                        newPosition={newPositionStyle}\n\n                        HandleEndMoveAnim={(moveType)=>this.HandleEndMoveAnim(moveType)}\n\n                        key={k+'pieceGrille' + renderingLastMove}\n                    />\n\n                );\n            }\n            \n        }\n\n\n\n        \n        if( precPiece !== PIECE.NULL && renderingLastMove)\n            tablePieceElements.push(\n\n                <Piece \n                    pieceID={precPiece}\n                    \n                    translation={false}\n                    fadeIn={renderingLastMove}\n\n                    position={{top: (newMove.y*75)+'px' , left: (newMove.x*75)+'px'}}\n                    newPosition={{top: (newMove.y*75)+'px' +'', left: (newMove.x*75)+'px'+''}}\n\n                    HandleEndMoveAnim={(moveType)=>this.HandleEndMoveAnim(moveType)}\n\n                    key={99530+'pieceGrille'}\n                />\n\n            );\n\n        return tablePieceElements;\n\n    }\n\n    generateClickLayer(clickable){\n\n        let tableClickElements = [];\n\n        for (let i = 0; i < 64 ; i++) \n        {\n            let x = i % 8,\n                y = Math.floor(i / 8);\n\n            \n            let isPlayersTile = this.props.status[y][x] * this.playerColor > 0,\n                isMovePossible =  this.state.possibleMoves !== null && this.state.possibleMoves[y][x];\n\n            tableClickElements.push(\n                <div \n                    key={i+'clickGrille'}\n                    className={\n                        (isMovePossible ? 'highLightedTile' : 'non-highLightedTile') + ' ' +\n                        (isPlayersTile? 'playerTile' : 'adversaireTile') + ' ' + \n                        'clickableCase'\n                    }\n\n\n                    onClick={()=>this.handleClick(x, y, clickable)}\n                >\n                    \n                </div>\n            );\n\n            \n        }\n\n        return tableClickElements;\n    }\n\n    static findPossibleMoves(x, y, tour, status){\n        \n        let table = toggleDirection(status, tour),\n            possibleMovesList = [], // TODO ::\n            possibleMoves = Array(8).fill(null).map(() => Array(8).fill(0));//Innit a 8x8 matrix (JS :/)\n\n\n        y = (tour === COLOR.NOIR) ? y : 8-y-1;\n\n        //PAWN\n        //==============================================================\n        if ( Math.abs(table[y][x]) === PIECE.PION) \n        {\n\n            let  pasclassique = false; // Si on peut fair un pas classique, on met cette variable a 1\n\n            //CLASSICAL MOVE\n            if ( table[y+1][x] === PIECE.NULL)\n            {\n                possibleMoves[y+1][x] = 1;\n                pasclassique = true;\n            }\n\n            //FIRST MOVE\n            if ( pasclassique && y === 1 )\n            {\n\n                if ( table[y+2][x] === PIECE.NULL )\n\n                    possibleMoves[y+2][x] = 1;\n\n            }\n\n            //TAKING OPPONENT'S PIECE\n            if ( y !== 7 ) \n            {\n                if ( x !== 7 && table[y+1][x+1] * tour < 0)\n\n                    possibleMoves[y+1][x+1] = 1;\n\n                if ( x !== 0 && table[y+1][x-1] * tour < 0 )\n\n                    possibleMoves[y+1][x-1] = 1;\n            }\n\n        }\n          //ROOK OR QUEEN\n        //==============================================================\n        if ( Math.abs(table[y][x]) === PIECE.TOUR || Math.abs(table[y][x]) === PIECE.REINE) \n        {\n            let i = 1;\n\n            while ( y+i < 8 && table[y+i][x] * tour <= 0) \n            {\n                possibleMoves[y+i][x] = 1;\n\n                if (table[y+i][x] * tour < 0)\n\n                    break;\n\n                i++;\n            }\n\n            i = 1;\n            while (  y-i >= 0 && table[y-i][x] * tour <= 0) \n            {\n                possibleMoves[y-i][x] = 1;\n\n                if (table[y-i][x] * tour < 0)\n\n                    break;\n                i++;\n            }\n\n            i = 1;\n            while ( x+i < 8 && table[y][x+i] * tour <= 0) \n            {\n                possibleMoves[y][x+i] = 1;\n\n                if (table[y][x+i] * tour < 0)\n\n                    break;\n\n                i++;\n            }\n\n            i = 1;\n            while ( x-i >= 0 && table[y][x-i] * tour <= 0  ) \n            {\n                possibleMoves[y][x-i] = 1;\n\n                if (table[y][x-i] * tour < 0)\n\n                    break;\n                i++;\n            }\n        }\n        //BISHOP OR QUEEN\n        //==============================================================\n        if ( Math.abs(table[y][x]) === PIECE.FOU || Math.abs(table[y][x]) === PIECE.REINE) \n        {\n            let i = 1;\n\n            while ( y+i < 8  &&  x+i < 8 && table[y+i][x+i] * tour <= 0 ) \n            {\n                possibleMoves[y+i][x+i] = 1;\n                \n                if (table[y+i][x+i] * tour < 0 )\n\n                    break;\n\n                i++;\n            }\n\n            i = 1;\n            while ( y-i >= 0  &&  x+i < 8 && table[y-i][x+i] * tour <= 0  ) \n            {\n                possibleMoves[y-i][x+i] = 1;\n                \n                if (table[y-i][x+i] * tour < 0 )\n                \n                    break;\n                i++;\n            }\n\n            i = 1;\n            while ( y+i < 8  &&  x-i >= 0 && table[y+i][x-i] * tour <= 0) \n            {\n                possibleMoves[y+i][x-i] = 1;\n\n                if (table[y+i][x-i] * tour < 0)\n\n                    break;\n                i++;\n            }\n\n            i = 1;\n            while ( y-i >= 0  &&  x-i >= 0 && table[y-i][x-i] * tour <= 0 ) \n            {\n                possibleMoves[y-i][x-i] = 1;\n\n                if (table[y-i][x-i] * tour < 0)\n\n                    break;\n                i++;\n            }\n        }\n        //KNIGHT\n        //==============================================================\n        else if ( Math.abs(table[y][x]) === PIECE.CAVALIER)\n        {\n\n                // ONE FORWARD LEFT DIAGONAL STEP AND ANOTHER STEP TO THE LEFT\n                if ((x > 0 && y > 1) && (table[y-2][x-1] * tour <= 0) )\n                    possibleMoves[y-2][x-1] = 1;\n\n                // ONE FORWARD RIGHT DIAGONAL STEP AND ANOTHER STEP TO THE RIGHT\n                if ((x > 0 && y < 6) && (table[y+2][x-1] * tour <= 0) )\n                    possibleMoves[y+2][x-1] = 1;\n\n                // ONE BACKWARD LEFT DIAGONAL STEP AND ANOTHER ONE TO THE LEFT\n                if ((x < 7 && y > 1) && (table[y-2][x+1] * tour <= 0) )\n                    possibleMoves[y-2][x+1] = 1;\n\n                // ONE BACKWARD RIGHT DIAGONAL STEP AND ANOTHER STEP TO THE RIGHT\n                if ((x < 7 && y < 6) && (table[y+2][x+1] * tour <= 0) )\n                    possibleMoves[y+2][x+1] = 1;\n\n                // ONE FORWARD LEFT DIAGONAL STEP AND ANOTHER FORWARD ONE\n                if ((x > 1 && y > 0) && (table[y-1][x-2] * tour <= 0) )\n                    possibleMoves[y-1][x-2] = 1;\n\n                // ONE FORWARD RIGHT DIAGONAL STEP AND ANOTHER FORWARD ONE\n                if ((x > 1 && y < 7) && (table[y+1][x-2] * tour <= 0) )\n                    possibleMoves[y+1][x-2] = 1;\n\n                // ONE BACKWARD DIAGONAL LEFT MOVE AND ANOTHER FORWARD MOVE\n                if ((x < 6 && y > 0  && (table[y-1][x+2] * tour <= 0) ))\n                    possibleMoves[y-1][x+2] = 1;\n\n                // ONE BACKWARD DIAGONAL RIGHT MOVE AND ANOTHER BACKWARD ONE\n                if ((x < 6 && y < 7) && (table[y+1][x+2] * tour <= 0) )\n                    possibleMoves[y+1][x+2] = 1;\n\n        }\n\n        return toggleDirection(possibleMoves, tour);\n        \n        function toggleDirection(table, tour){\n            if( tour === COLOR.BLANC )\n            {\n                let newTable = new Array(8);\n\n                for (let i = 0; i < 8; i++) \n                    newTable[i] = [...table[8-i-1]];\n\n                return newTable;\n            }\n            else\n                return table;\n\n        }\n    }\n\n    render(){\n        console.log('updage', this.state);\n        return(\n\n            <div id='plateauCTN'>\n\n                {this.generateGrille(this.state.selectedPiece, this.state.possibleMoves)}\n\n                <div id='piecesCTN'>\n                    {this.generatePieces(this.state.selectedPiece, this.state.moving, this.state.renderingLastMove)}\n                </div>\n\n                <div id='clickLayer'>\n                    {this.generateClickLayer(this.state.clickable)}\n                </div>\n\n            </div>\n        );\n    }\n}\n\nexport default Plateau;","import React, { Component } from 'react'\n\nimport '../Style/font/font.css'\nimport '../Style/GameParamSelec.css'\n\nexport default class GameParamSelec extends Component {\n    constructor(props){\n        super(props);\n\n        this.state = {\n            color: 'ALEA',\n        }\n    }\n\n    go(){\n        this.props.validate({\n            color: this.state.color\n        });\n    }\n\n    render() {\n        return (\n            <div id=\"GameParamOVERLAYCTN\">\n            <div id=\"GameParamCTN\">\n\n                <div id=\"popupHeaderCTN\">\n                    <img width=\"40px\" height=\"40px\" src=\"x.svg\" id=\"Xbtn\"\n                        onClick={this.props.handleHideParam}\n                        alt=\"غلق\"\n                    />\n                    <h1>\n                        مميزات اللعبة\n                    </h1>\n                </div>\n\n                <hr width=\"90%\" style={{backgroundColor: 'black'}} />\n\n                <div>\n\n                    <h2 class=\"popUpSetting\">اختر مدت اللعبة</h2>\n                    <div>\n                        <button className=\"popupSelectionBTN\">5</button>\n                        <button className=\"popupSelectionBTN\">10</button>\n                        <button className=\"popupSelectionBTN\">20</button>\n                    </div>\n                </div>\n\n                <div>\n\n                    <h2 class=\"popUpSetting\">اختر كلمة السرية للادخول</h2>\n                    <div>\n                        <div>\n                            <p></p>\n                            <input type=\"text\" disabled=\"true\"/>\n                        </div>\n                    </div>\n                </div>\n\n                <div>\n\n                    <h2 class=\"popUpSetting\">اختر لون قطعك</h2>\n                    <img src=\"Pieces/svgCommon/pionBLANC.svg\" class=\"colorBTN\"\n\n                        id={this.state.color === 'BLANC' ? 'selectedColorBTN' : 'none'}\n                        alt=\"أبيض\"\n\n                        onClick={()=>this.setState({color: 'BLANC'})}\n                    />\n\n                    <img src=\"Pieces/svgCommon/pionNOIRBLANC.svg\" class=\"colorBTN\"\n\n                        id={this.state.color === 'ALEA' ? 'selectedColorBTN' : 'none'}\n                        alt=\"عشوائي\"\n                        onClick={()=>this.setState({color: 'ALEA'})}\n                    />\n\n                    <img src=\"Pieces/svgCommon/pionNOIR.svg\" class=\"colorBTN\"\n\n                        id={this.state.color === 'NOIR' ? 'selectedColorBTN' : 'none'}\n                        alt=\"أسود\"\n                        onClick={()=>this.setState({color: 'NOIR'})}\n                    />\n                </div>\n                \n                <div>\n                    <button  id=\"popupBTN\" onClick={this.go.bind(this)}>إبدأ</button>\n                </div>\n            </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport Plateau from './Plateau/Plateau';\n\nimport '../Style/font/font.css'\nimport '../Style/MainMenu.css'\nimport GameParamSelec from './GameParamSelec';\n\nconst PIECE = {\n    NULL: 0,\n    PION: 1,\n}\nconst COLOR = {\n  BLANC: 1,\n  NOIR: -1\n}\nconst plateauStatus = [\n  [-3, -2, -4, -5, -6, -4, -2, -3],\n  [-1, 0, -1, -1, -1, -1, -1, -1],\n  [0, 0, 2, 1, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 4, 0],\n  [0, -1, 0, 0, 3, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0],\n  [1, 1, 0, 1, 1, 1, 1, 1],\n  [0, 2, 4, 6, 5, 4, 2, 3],\n];\n\nconst move = {\n  previousPieceInfo:{\n    x: 1,\n    y: 1,\n  },\n  newPieceInfo:{\n    x: 1,\n    y: 1,\n  },\n  consumedPiece: PIECE.NULL\n}\n\nexport default class MainMenu extends Component {\n    constructor(props){\n        super(props);\n\n        this.selectedGameMode = \"\";\n\n        this.state = {\n            showParamSelec: false\n        }\n    }\n\n    launchGameRouter(gameParam){\n\n        switch (this.selectedGameMode) \n        {\n            case \"CREATE\":\n                \n                this.launchCreateRoom(gameParam);\n                break;\n\n            case \"JOIN\":\n            \n                this.launchJoinRoom(gameParam);\n                break;\n\n            case \"IA\":\n        \n                this.launchIA(gameParam);\n                break;\n\n            default:\n                break;\n\n        }\n    }\n\n    //=============================================\n\n    initCreateRoom(){\n        this.setState({\n            showParamSelec: true\n        });\n    }\n\n    initJoinRoom(){\n    }\n\n    initIA(){\n        this.setState({\n            showParamSelec: true\n        });\n    }\n\n    //=============================================\n\n    launchCreateRoom(gameParam){\n\n    }\n\n    launchJoinRoom(gameParam){\n    }\n\n    launchIA(gameParam){\n\n    }\n\n\n    render() {\n        return (\n            <div >\n            \n                <div id=\"mainMenuCTN\">\n                    <div>\n                        <Plateau \n                            status={plateauStatus}\n                            move={move}\n\n                            clickable={false}\n                        />\n                    </div>\n\n                    <div id=\"mainMenuInterface\">\n                        <h1> ! أهلًا وسهلًازميلناالسطرنجي </h1>\n\n                        <button \n                            onClick={this.initCreateRoom.bind(this)}\n                            className=\"mainMenuBTN\"\n                        >\n                            إنشاء غرفة جديدة\n                        </button>\n\n                        <button \n                            onClick={this.initJoinRoom.bind(this)}\n                            className=\"mainMenuBTN\"\n                        >\n                            إنضمام إلى غرفة     \n                        </button>\n\n                        <button \n                            onClick={this.initIA.bind(this)}\n                            className=\"mainMenuBTN\"\n                        >\n                            لعب ضد الحاسوب\n                        </button>\n                    </div>\n                </div>\n\n                {this.state.showParamSelec && \n                    <GameParamSelec \n                        handleHideParam={()=>this.setState({showParamSelec: false})}\n                        validate={(gameParam)=>this.launchGameRouter(gameParam)}\n                    />\n                }\n\n            </div>\n        )\n    }\n}\n\n\n","import Plateau from '../Component/Plateau/Plateau';\n\n\nexport default class PlayerIA{\n\n    constructor(status, color){\n\n        this.status = status;\n        this.color = color;\n\n    }\n\n    setIAStatus(status){\n        this.status = status;\n    }\n\n    getIAMove(){\n        \n        let pieceSelected = false,\n            pickedMove,\n            coord;\n\n        do{//Ya reb, 3ashwaii\n\n            let absuh = this.status.flat().map((v, i)=>{\n                return { x: i%8 , y: Math.floor(i/8), piece: v }\n            }).filter((e)=>e.piece * this.color > 0);\n\n\n            coord = absuh[ getRandomInt(0, absuh.length) ];\n\n\n            let movesTable = Plateau.findPossibleMoves(coord.x, coord.y, this.color, this.status);\n\n            let movesList = movesTable.flat();\n\n            pieceSelected = movesList.indexOf(1) !== -1;\n\n\n            if ( pieceSelected ){\n\n                    let moveCoord = movesList.map(\n                        (value, index) => {\n                            return { x: index% 8 , y: Math.floor(index/8), kayen: value }\n                        }\n                    ).filter((e)=>e.kayen);//Chab\n\n\n                    pickedMove = moveCoord[ getRandomInt(0, moveCoord.length) ];\n\n            }\n\n        }while( !pieceSelected );\n\n\n        return {\n            previousPieceInfo:{\n              x: coord.x,\n              y: coord.y,\n            },\n            newPieceInfo:{\n              x: pickedMove.x,\n              y: pickedMove.y,\n            },\n            consumedPiece: this.status[pickedMove.y][pickedMove.x],\n        };\n    }\n}\n\nfunction getRandomInt(min, max) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min)) + min;\n}\n","import React, { Component } from 'react'\nimport Plateau from './Plateau/Plateau'\n\nimport PlayerIA from '../Class/IA'\n\nconst PIECE = {\n    NULL: 0,\n    PION: 1,\n    CAVALIER: 2,\n    TOUR: 3,\n    FOU: 4,\n    ROI: 5,\n    REINE: 6\n}\nconst COLOR = {\n  BLANC: 1,\n  NOIR: -1\n}\n/*            [-0, -2, -4, -5, -6, -0, -0, -3],\n            [0, 0, -0, -0, -0, -1, -1, -1],\n            [0, -1, 0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0, 0, 0],\n            [0, 0, -1, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0, 0, 0],\n            [1, 1, 1, 1, 1, 1, 1, 1],\n            [3, 2, 4, 6, 5, 4, 2, 3],*/\nexport default class RoomManager extends Component {\n\n    constructor(props){\n        super(props);\n        \n\n\n        this.color = props.color;\n        this.status = [\n            [-0, -0, -0, -5, -6, -0, -0, -0],\n            [0, 0, -0, -0, -0, -0, -0, -0],\n            [0, -1, 0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0, 0, 0],\n            [0, 0, -0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0, 0, 0],\n            [1, 1, 1, 1, 1, 1, 1, 1],\n            [3, 2, 4, 6, 5, 4, 2, 3],\n        ];\n\n\n\n        this.state = {\n            turn: 0,\n            status: this.copyTable(this.status),\n            move: {\n                previousPieceInfo:{\n                  x: 1,\n                  y: 1,\n                },\n                newPieceInfo:{\n                  x: 1,\n                  y: 2,\n                },\n                consumedPiece: PIECE.PION\n            },\n            playing: props.color === COLOR.BLANC ? true : false,\n        }\n\n        this.opponentType = 'IA';\n        this.ia = new PlayerIA(this.status, -this.color);\n\n    }\n\n    letIAChoose(){\n\n        let iaMove = this.ia.getIAMove();\n\n        \n        this.status[iaMove.newPieceInfo.y][iaMove.newPieceInfo.x] = \n                    this.status[iaMove.previousPieceInfo.y][iaMove.previousPieceInfo.x];\n        this.status[iaMove.previousPieceInfo.y][iaMove.previousPieceInfo.x] = PIECE.NULL;\n\n\n\n        this.setState({\n            turn: this.state.turn + 1,\n            move: {...iaMove},\n            status: this.copyTable(this.status),\n        });\n\n        console.log(iaMove, this.status);\n\n        this.ia.setIAStatus( this.copyTable(this.status) );\n\n\n    }\n\n    comfirmMove(altCoord, newCoord){\n\n\n        this.status[newCoord.y][newCoord.x] = this.status[altCoord.y][altCoord.x];\n        this.status[altCoord.y][altCoord.x] = PIECE.NULL;\n\n\n\n        if( this.opponentType === \"IA\" )\n        {\n            this.letIAChoose();\n        }\n        else\n        {\n\n        }\n    }\n\n    copyTable(table){\n        let newTable = new Array(8);\n\n        for (let i = 0; i < 8; i++) \n\n            newTable[i] = [...table[i]]\n\n        return newTable;\n    }\n\n\n    render() {\n        return (\n            <div>\n                    <Plateau \n                        key={this.state.turn+'turn'}\n\n                        clickable={true}\n                        turn={this.state.turn}\n                        color={this.props.color}\n                        status={this.state.status}\n                        move={this.state.move}\n                        handleComfirmMove={(altCoord, newCoord)=>this.comfirmMove(altCoord, newCoord)}\n                    />\n            </div>\n        )\n    }\n}\n\n\n","import React, { Component } from 'react'\nimport Header from './Header';\nimport LoginPopup from './LoginPopup';\nimport MainMenu from './MainMenu';\nimport GameInterface from './GameInterface';\n\n\n\nexport default class AppCTN extends Component {\n\n    constructor(props){\n        super( props );\n\n        this.state = {\n            displayLoginPopUp: false,\n        }\n\n    }\n\n    handleDisplayLogin(){\n        this.setState({displayLoginPopUp : true});\n    }\n    handleHideLogin(){\n        this.setState({displayLoginPopUp : false});\n    }\n\n    render() {\n        return (\n            <div style={{margin:'auto'}}>\n\n                <Header \n                    handleDisplayLogin={this.handleDisplayLogin.bind(this)}\n                />\n                \n                <center>\n                    <MainMenu />\n                    {/*<GameInterface color={1}/>*/}\n                </center>\n\n                {this.state.displayLoginPopUp && \n                    <LoginPopup\n                        handleHideLogin={this.handleHideLogin.bind(this)}\n                    />\n                } \n    \n          </div>\n        )\n    }\n}\n","import AppCTN from \"./Component/AppCTN\";\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <AppCTN />\n\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}